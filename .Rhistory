x <- seq(5, 15, length=1000)
y <- dnorm(x, mean=10, sd=3)
plot(x, y, type="l", lwd=1)
x <- seq(-4, +4, length=10000)
y <- dnorm(x, mean=0, sd=1)
plot(x, y, type="l", lwd=1)
install.packages("psych")
install.packages("lme4")
install.packages("plyr")
install.packages("tidyverse")
install.packages("ggstatsplot")
install.packages("gmodels")
install.packages("texreg")
install.packages("lmerTest")
install.packages("apaTables")
install.packages("kableExtra")
install.packages("simr")
install.packages("effects")
install.packages("beepr")
install.packages("MuMIn")
knitr::opts_chunk$set(cache = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning =  FALSE)
knitr::opts_chunk$set(fig.width=3.25)
knitr::opts_chunk$set(fig.height=2.75)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(results='hold')
# Names
workers <- c("Mike Jones", "Dana Owens", "Chris Rios", "Chance Bennett", "Melissa Elliot")
# Reviews
reviews <- c(4.5, 4.7, 4.6, 4.9, 5.0)
# Combine into a dataframe
review_data <- as.data.frame(cbind(workers, reviews))
review_data
# Names
workers <- c("Mike Jones", "Dana Owens", "Chris Rios", "Chance Bennett", "Melissa Elliot")
# Reviews
reviews <- c(4.5, 4.7, 4.6, 4.9, 5.0)
# Combine into a dataframe
review_data <- as.data.frame(cbind(workers, reviews))
workers <- c("Michael Jones", "Dana Owens", "Christopher Rios", "Gary Grice", "Melissa Elliot")
# Names
workers <- c("Mike Jones", "Dana Owens", "Chris Rios", "Chance Bennett", "Melissa Elliot")
# Reviews
reviews <- c(4.5, 4.7, 4.6, 4.9, 5.0)
# Combine into a dataframe
review_data <- as.data.frame(cbind(workers, reviews))
# Names
workers <- c("Michael Jones", "Dana Owens", "Christopher Rios", "Gary Grice", "Melissa Elliot")
# Monthly hours
hours <- c(235, 241.5, 243, 251, 272.5)
# Combine into a dataframe
hours_data <- as.data.frame(cbind(workers, hours))
# Names
workers <- c("Michael Jones", "Dana Owens", "Christopher Rios", "Gary Grice", "Melissa Elliot")
# Monthly hours
hours <- c(235, 241.5, 243, 251, 272.5)
# Combine into a dataframe
hours_data <- as.data.frame(cbind(workers, hours))
# Merge dataframes
bad_data <- merge(hours_data, review_data)
# Let's look at it
bad_data
# Vector of names we want to change
bad_names <- c("Michael Jones", "Christopher Rios")
# Vector of names we want to keep
good_names <- c("Mike Jones", "Chris Rios")
# Identify which bad names are present in x
intersect(bad_names, hours_data$workers)
intersect(bad_names, review_data$workers)
names_to_change <- intersect(bad_names, hours_data$workers)
# Identify position of bad names in x
pos_to_change <- which(hours_data$workers %in% names_to_change)
# Extract all bad names from x
to_change <- hours_data[pos_to_change, "workers"]
# Identify the position of the bad names of x in vector of bad names
pos_bad <- match(to_change, bad_names)
# Identify the good names that match the bad names
good_names <- good_names[pos_bad]
# Changing bad_names to good_names
hours_data[pos_to_change, "workers"] <- good_names
# Check to make sure worked
hours_data
# Resetting vector of names we want to change
bad_names <- c("Michael Jones", "Christopher Rios")
# Resetting vector of names we want to keep
good_names <- c("Mike Jones", "Chris Rios")
# Create function to fix names
name_changer <- function(x){
# Identify which bad names are present in x
names_to_change <- intersect(bad_names, x$workers)
# Identify position of bad names in x
pos_to_change <- which(x$workers %in% names_to_change)
# Extract all bad names from x
to_change <- x[pos_to_change, "workers"]
# Identify the position of the bad names of x in vector of bad names
pos_bad <- match(to_change, bad_names)
# Identify the good names that match the bad names
good_names <- good_names[pos_bad]
# Switch bad names for good names
x[pos_to_change, "workers"] <- good_names
return(x)
}
# Names
workers <- c("Michael Jones", "Dana Owens", "Christopher Rios", "Gary Grice", "Melissa Elliot")
# Monthly hours
hours <- c(235, 241.5, 243, 251, 272.5)
# Combine into a dataframe
hours_data <- as.data.frame(cbind(workers, hours))
# Use name_changer function
hours_data <- name_changer(hours_data)
# Let's take a look
hours_data
# Create function to fix names
name_changer <- function(x){
# Identify which bad names are present in x
names_to_change <- intersect(bad_names, x$workers)
# Identify position of bad names in x
pos_to_change <- which(x$workers %in% names_to_change)
# Extract all bad names from x
to_change <- x[pos_to_change, "workers"]
# Converting to vector if it's a tibble
if(is_tibble(to_change)) to_change <- pull(to_change, workers)
# Identify the position of the bad names of x in vector of bad names
pos_bad <- match(to_change, bad_names)
# Identify the good names that match the bad names
good_names <- good_names[pos_bad]
# Switch bad names for good names
x[pos_to_change, "Worker"] <- good_names
return(x)
}
